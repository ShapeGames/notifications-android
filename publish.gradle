apply plugin: 'maven-publish'

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

def libraryGroupId = "dk.shape.games.notifications"

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "mavenAar"
            mavenAar(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds javadocs and sources as separate jars
//                artifact androidJavadocsJar
                artifact androidSourcesJar

                // You can customize attributes of the publication here
                groupId = libraryGroupId
            }
        }
        repositories {
            maven {
                url = 'https://artifactory.shape.dev/artifactory/libs-release-local'
                credentials {
                    username = project.hasProperty("shape_publisher_username") ? "$shape_publisher_username" : "$System.env.shape_publisher_username"
                    password = project.hasProperty("shape_publisher_password") ? "$shape_publisher_password" : "$System.env.shape_publisher_password"
                }
            }
        }
    }
}
